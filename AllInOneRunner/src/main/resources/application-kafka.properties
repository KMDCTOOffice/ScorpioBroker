mysettings.kafka.bootstrap.host=${bushost:localhost}
mysettings.kafka.bootstrap.port=${busport:9092}
bootstrap.servers=${mysettings.kafka.bootstrap.host}:${mysettings.kafka.bootstrap.port}
client-id-prefix=$[quarkus.uuid}
group.id=$[quarkus.application.name}$[quarkus.uuid}
scorpio.messaging.maxSize=1048576
#Kafka settings
kafka.bootstrap.servers=${bootstrap.servers}
mp.messaging.incoming.registryretrieve.connector=smallrye-kafka
mp.messaging.incoming.registryretrieve.topic=${scorpio.topics.registry}
mp.messaging.incoming.registryretrieve.auto.offset.reset=latest

mp.messaging.incoming.registryretrieve.broadcast=true
mp.messaging.outgoing.registry.topic=${scorpio.topics.registry}
mp.messaging.outgoing.registry.connector=smallrye-kafka

#readability block###########
mp.messaging.outgoing.entity.topic=${scorpio.topics.entity}
mp.messaging.outgoing.entity.connector=smallrye-kafka

mp.messaging.incoming.entityretrieve.connector=smallrye-kafka
mp.messaging.incoming.entityretrieve.topic=${scorpio.topics.entity}
mp.messaging.incoming.entityretrieve.auto.offset.reset=latest
mp.messaging.incoming.entityretrieve.broadcast=true
#readability block###########
mp.messaging.outgoing.subalive.connector=smallrye-kafka
mp.messaging.outgoing.subalive.topic=${scorpio.topics.subalive}
mp.messaging.outgoing.subalive.broadcast=true
#mp.messaging.outgoing.subalive.value.serializer=eu.neclab.ngsildbroker.commons.serialization.messaging.AliveAnnouncementSerializer
mp.messaging.outgoing.subalive.merge=true
mp.messaging.incoming.subaliveretrieve.connector=smallrye-kafka
mp.messaging.incoming.subaliveretrieve.topic=${scorpio.topics.subalive}
mp.messaging.incoming.subaliveretrieve.auto.offset.reset=latest
mp.messaging.incoming.subaliveretrieve.broadcast=true
#mp.messaging.incoming.subaliveretrieve.value.deserializer=eu.neclab.ngsildbroker.commons.serialization.messaging.AliveAnnouncementDeserializer
#readability block###########
mp.messaging.outgoing.subsync.connector=smallrye-kafka
mp.messaging.outgoing.subsync.topic=${scorpio.topics.subsync}
mp.messaging.outgoing.subsync.broadcast=true
#mp.messaging.outgoing.subsync.value.serializer=eu.neclab.ngsildbroker.commons.serialization.messaging.SyncMessageSerializer
mp.messaging.outgoing.subsync.merge=true
mp.messaging.incoming.subsyncretrieve.connector=smallrye-kafka
mp.messaging.incoming.subsyncretrieve.topic=${scorpio.topics.subsync}
mp.messaging.incoming.subsyncretrieve.auto.offset.reset=latest
mp.messaging.incoming.subsyncretrieve.broadcast=true
#mp.messaging.incoming.subsyncretrieve.value.deserializer=eu.neclab.ngsildbroker.commons.serialization.messaging.SyncMessageDeserializer
#readability block###########
#mp.messaging.incoming.regsubsyncretrieve.value.deserializer=eu.neclab.ngsildbroker.commons.serialization.messaging.SyncMessageDeserializer
mp.messaging.outgoing.histsync.connector=smallrye-kafka
mp.messaging.outgoing.histsync.topic=${scorpio.topics.histsync}
#mp.messaging.outgoing.regsubsync.value.serializer=eu.neclab.ngsildbroker.commons.serialization.messaging.SyncMessageSerializer
mp.messaging.incoming.histsyncretrieve.connector=smallrye-kafka
mp.messaging.incoming.histsyncretrieve.topic=${scorpio.topics.histsync}
mp.messaging.incoming.histsyncretrieve.auto.offset.reset=latest
mp.messaging.incoming.histsyncretrieve.broadcast=true